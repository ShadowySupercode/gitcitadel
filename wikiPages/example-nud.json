[
  {
    "id": "a7696b56ac2af1db22b3a0caa27a84f01789bdd91d5e9eb497890a9597a0b339",
    "pubkey": "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
    "created_at": 1714659471,
    "kind": 30817,
    "tags": [
      ["d", "ordinals-comments"],
      ["title", "Ordinals Comments"],
      ["summary", "This is a completely made-up example to showcase how to use a NUD."],
      ["description", "naddr1qvzqqqrcvgpzquqjyy5zww7uq7hehemjt7juf0q0c9rgv6lv8r2y..."],
      ["kinds", "10773:ordinal comment"],
      ["tags", "o"],
      ["nips", "NUD"],
      ["status", "active"]
    ],
    "content": "= Ordinals Comments\n\nThis NUD defines how to comment on Bitcoin Ordinals using Nostr events.\n\nEvents should be of kind 10773 and include a tag in the format [\"o\", \"1928604426675219\"] in which 1928604426675219 is the satoshi number given by `ord`. Aside from that these events follow the rules of kind 1.",
    "sig": "76bc8a799bb1f419a74b177e38ddb372358bc21f074848a8b8f1d9f21fc1d7d1f09ffe9d9fcc41ed7de405e102bb205100aadaa1e51ee54289e58f40ba55a8fd"
  },




  
  {
    "id": "a7696b56ac2af1db22b3a0caa27a84f01789bdd91d5e9eb497890a9597a0b339",
    "pubkey": "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
    "created_at": 1714659471,
    "kind": 30817,
    "tags": [
      ["d", "modular-articles"],
      ["title", "Modular Articles"],
      ["summary", "Spec for modular articles (indexes and zettels). Useful for eBooks, eMagazines, audiobooks split into chapters, or anything else that needs to have a hierarchical and/or modular structure."],
      ["description", "naddr1qvzqqqrcvgpzquqjyy5zww7uq7hehemjt7juf0q0c9rgv6lv8r2yxcxuf0rvcx9eqy88wumn8ghj7mn0wvhxcmmv9uq3zamnwvaz7tmwdaehgu3wwa5kuef0qydhwumn8ghj7argv4nx7un9wd6zumn0wd68yvfwvdhk6tcppemhxue69uhkummn9ekx7mp0qyghwumn8ghj7mn0wd68ytnhd9hx2tcprdmhxue69uhhg6r9vehhyetnwshxummnw3erztnrdakj7qqgde4ky6ts95crzqd22qf"],
      ["kinds", "30040:index", "30041:zettel"],
      ["tags", "p", "e", "d", "title", "author", "i", "t", "published_on", "published_by", "image", "summary", "version", "wikilink"],
      ["nips", "NUD"],
      ["status", "draft"]
    ],
    "content": "= NKBIP-01\n\nimage::https://i.nostr.build/QCzgEahFqxjK3LbT.png[NKB diagram]\n\nSource: https://github.com/limina1/NKBIPs[repo for specs]\n\nThis NKBIP defines the minimum specification required for a Nostr knowledge base (NKB). It also describes possibilities for customizing the events or expanding off from the basic structure. An implementation of event creation can be found in the [[GC-Alexandria]] client.\n\n== Why modular articles?\n\n=== Semantic closure\n\nComposable objects that are able to generate self contained meaning given the knowledge they draw from, are referred to as [[Semantic closure]]. When citing an idea, the standard practice is to cite the full text, but this practice fails for longer texts.\n\n=== Search and navigation\n\nAn article may have multiple concepts contained, but they may not be apparent through just the title or summary/abstract. Multiple articles may also contain an explanation of a single concept and individuals may need to read multiple takes on a single concept to understand it.\n\n=== Remixability\n\nInstead of writing a unique introduction, take an existing article fragment and use it as a section in your own article.\n\n=== Organic structure\n\nA project can encompass many ideas to describe and build. If you want to teach machine learning you may want to pull in concepts from linear algebra, probability, numerical libraries for matrix algebra to fully explain what you are doing and detail the various aspects of your project. An anatomy textbook can link concepts together not only linearly but by anatomical relation. Not only can articles be read linearly but they themselves can be their own sub-network of hyperlinks to related concepts at various levels of organization.\n\n== Implementation\n\nThe most basic article can be constructed through two kinds with an analog to the standard kind 0 and kind 1 defined in [[NIP-01]] and influence taken from [[NIP-23]] and [[NIP-54]]:\n\n=== 30040: Index\n\nThe following rules are mandatory:\n\n* There is no `content` field.\n* The full title of the index or collection MUST be indicated by the `title` tag.\n* The index MUST also be uniquely identifiable using a combination of the `d` tag's first value (usually containing the `title`), the `pubkey`, and the `kind` fields.\n* Kind 30040 MUST have events listed in `e` tags in the order that they appear in the article. The events may be any already-existing event (including nested kind 30040s).\n* If the index is a derivation or an edit of another event, the pubkey that published the original MUST be indicated by a `p` tag, and a reference to the original event MUST be indicated by an `e` tag immediately following the `p` tag of the originator.\n\nThe following rules are optional:\n\n* Author and Edition information MAY be included as positional values in the d tag array according to the rules below.\n** The second `d` tag value MAY contain the name of the author.  If there are multiple authors, only the name of the first or primary author should be specified. The author name in the `d` tag MUST obey the same normalization rules as the title in the first `d` tag value.\n** If an author is specified, the third `d` tag value MAY contain a specifier for the edition of the work.  This value MUST follow the same normalization rules as title in the first `d` tag value.\n** A `d` tag array with all three values specified might look like this: `[\"#d\", \"war-and-peace\", \"leo-tolstoy\", \"penguin-classics-edition\"]`.\n* One or more authors MAY be listed in the `author` tag. The `author` tag need not correspond to the `pubkey` tag of the event originator, as in the case where an npub publishes a public-domain book. The author of the work, in such a case, is not the owner of the npub that originated the event.\n* The ISBN number of the work MAY be listed in the `i` tag.\n* The `t` tag MAY be used to define the scope or topic of the index, or to denote hashtags.\n* The `published_on` tag MAY be used to define the date on which the collection material was originally published and the `published_by` tag MAY be used to define who the publisher was. The `published_on` tag should be written in the ISO-8601 date format, as that can handle all dates in recorded history.\n* The `image` tag MAY be used to denote a picture to associate with the index.\n* The `summary` tag MAY be used to give a short description of the works that the index contains.\n* The `version` tag MAY be used to denote the volume, edition, or translation of the work, or the software release that documentation is referring to.\n\n[source, json]\n----\n{\n\t\"id\": \"<event_id>\",\n\t\"pubkey\": \"<event_originator_pubkey>\",\n\t\"created_at\": 1725087283,\n\t\"kind\": 30040,\n    \"tags\": [\n\t    [ \"d\", \"<identifier>\", \"<author>\", \"<edition>\" ],\n\t    [ \"title\", \"<full_index_title>\" ],\n\t    [ \"author\", \"<author_name>\" ],\n\t    [ \"i\", \"isbn:9780765382030\" ],\n\t    [ \"t\", \"<topics about which the event might be of relevance>\"],\n\t    [ \"published_on\", \"<date in the format YYYY-MM-DD>\" ],\n\t    [ \"published_by\", \"<publisher of the source material>\"],\n\t    [ \"image\", \"<URL pointing to an image to be shown with the title>\" ],\n\t    [ \"summary\", \"<human readable description of the work>\" ],\n\t    [ \"version\", \"<the volume, edition, or translation included>\" ],\n\t    [ \"e\", \"<event_0id>\", \"<relay0_uri>\", ..., \"<relay_n_uri>\" ],\n\t\t[ \"e\", \"<event_1id>\", \"<relay0_uri>\", ..., \"<relay_n_uri>\" ],\n\t\t...\n\t\t[ \"e\", \"<event_n_id>\", \"<relay_0_uri>\", ..., \"<relay_n_uri>\" ],\n\t\t[ \"p\", \"<pubkey_0>\", \"<pubkey_1>\", ..., \"<pubkey_n>\" ],\n\t\t[ \"e\", \"<original_event_id>\", \"<relay_0_uri>\", ..., \"<relay_n_uri>\" ]\n\t],\n\t\"sig\": \"<event_signature>\"\n}\n----\n\n=== 30041: Zettel\n\nAn index never contains text in its `content` field.  Instead, text content is assembled from a collection of kind 30041 \"zettel\" events.\n\nThe following rules are mandatory:\n\n* The zettel MUST contain a `d` tag.\n** The zettel's `d` tag MAY include additional values for author and edition, as specified above for kind 30041.\n* The zettel MUST contain a `title` tag denoting the title of the section (\"Introduction\", \"References\", \"Chapter 1.0\", etc).\n* The `content` field MUST contain text meant for display to the end user.\n* The `content` field MAY contain markup in AsciiDoc format.\n* The `content` field MAY contain wikilinks denoted by doubled brackets, as described in [[NIP-54]].\n* Each wikilink SHOULD be precisely addressed by a corresponding `wikilink` tag of the form `[\"wikilink\", \"d-tag\", \"event-id\", \"relay-url\"]` where `d-tag` is the normalized d tag string of the target event, and `event id` is the ID of the target event.\n** The second index of a wikilink tag MUST include a d tag value.\n** The wikilink tag's d tag value MUST correspond to the normalized value of a wikilink within the `content` field.\n** The `event-id` value in the third index of the wikilink tag array MUST be included to help clients find the referenced event more easily, but it is not strictly required.\n** Relay hints MAY be included after the `event-id` value to suggest to the client one or more relays on which to find the referenced event.\n** Other than the d tag value in the second index, the wikilink tag array is much like the `e` tag array.  The `d` tag reference is included to help clients match wikilinks in the context to their corresponding reference tag.\n\nAdditional optional tags, akin to those for 30040 kind MAY be used.\n\n[source,json]\n----\n{\n\t\"id\": \"<event_id>\",\n\t\"pubkey\": \"8ae74c618a4713f32129...\",\n\t\"created_at\": 1708083476,\n\t\"kind\": 30041,\n\t\"tags\": [\n\t\t[ \"title\", \"Events and signatures\" ],\n\t\t[ \"d\", \"events-and-signatures\" ],\n        [ \"wikilink\", \"nip-01\", \"ad9dad8c4006d781d94ae001884b6987caa2a6852f3f43a571ca6838d0ced3af\", \"wss://thecitadel.nostr1.com\" ]\n\t],\n\t\"content\": \"== Events and Signatures\\nEach user has a keypair, as defined in [[NIP-01]]. Signatures, public key, and encodings are done according to the Schnorr signatures standard for the curve secp256k1.\\nThe only object type that exists is the event , which has the following format on the wire:\\n...\",\n\t\"sig\": \"49cab8c75fb35cec71d07258...\"\n}\n----\n\n==== Wikilinks\n\nZettel events are rendered more powerful via links to other zettels or indices embedded within the text.  As described above, a wikilink, denoted by doubled square brackets, MAY be linked to a single, specific event specified by a `wikilink` tag.  However, if no such tag is specified for a given wikilink, the client SHOULD treat that wikilink as a search key that aids the user in finding related index or zettel events.  Such search-based wikilinks MUST adhere to the following specifications:\n\n* Searches are performed over events' `d` tags, so search-based wikilinks MAY include keywords for any or all of title, author, and edition.  These wikilinks take the general form `[[<link text>|title: <title>|author: <author>|edition: <edition>]]`.\n** Unprefixed text within the wikilink MUST be used to render the user-facing text of the link when the AsciiDoc content of a zettel is formatted and displayed.\n** A wikilink containing text with no additional specifier MUST be considered to be a title search.  The text within the brackets MUST be normalized according to the rules specified above for `d` tag values before it is used to perform a search.\n** A search-based wikilink MAY specify a title by including a value in the form `title: <title-text>`.  The text after the colon MUST be normalized according to the `d` tag rules above.  If no `title:` specifier is given, the normalized form of the display text MUST be treated as the title.\n** A search-based wikilink MAY specify an author by including a value in the form `author: <author-name>`.  The text after the colon MUST be normalized according to the `d` tag rules above.\n** A search-based wikilink MAY specify an edition by including a value in the form `edition: <edition-name>`.  The text after the colon MUST be normalized according to the `d` tag rules above.\n* Specifiers within a search-based wikilink MUST be separated by the `|` character.\n* Clients SHOULD present the user with a search view based on the title, author, and edition specifiers when the user clicks on a search-based wikilink.\n\nAn example search-based wikilink might look like this: `[[War and Peace|author: Leo Tolstoy|edition: Penguin Classics Edition]]`.\n\n=== Labels\n\nThis NIP defines the core events for publishing some document. Additional value is added through the curation of documents published, including other npub's documents.\n\nOne method for doing this is through labeling (as in [[NIP-32]]). Labels could be used to add metadata to indexes or sections, and also to \"externally tag\" a particular event for some other use.\n\nA label for embeddings is described in [[NKBIP-02]].",
    "sig": "76bc8a799bb1f419a74b177e38ddb372358bc21f074848a8b8f1d9f21fc1d7d1f09ffe9d9fcc41ed7de405e102bb205100aadaa1e51ee54289e58f40ba55a8fd"
  }
]